/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Share, ShareInterface } from "../Share";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPyraMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CREATOR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PYRA_MARKET",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000c4c38038062000c4c833981016040819052620000349162000133565b818160036200004483826200024c565b5060046200005382826200024c565b5050336080525050506001600160a01b031660a05262000318565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009657600080fd5b81516001600160401b0380821115620000b357620000b36200006e565b604051601f8301601f19908116603f01168101908282118183101715620000de57620000de6200006e565b81604052838152602092508683858801011115620000fb57600080fd5b600091505b838210156200011f578582018301518183018401529082019062000100565b600093810190920192909252949350505050565b6000806000606084860312156200014957600080fd5b83516001600160a01b03811681146200016157600080fd5b60208501519093506001600160401b03808211156200017f57600080fd5b6200018d8783880162000084565b93506040860151915080821115620001a457600080fd5b50620001b38682870162000084565b9150509250925092565b600181811c90821680620001d257607f821691505b602082108103620001f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024757600081815260208120601f850160051c81016020861015620002225750805b601f850160051c820191505b8181101562000243578281556001016200022e565b5050505b505050565b81516001600160401b038111156200026857620002686200006e565b6200028081620002798454620001bd565b84620001f9565b602080601f831160018114620002b857600084156200029f5750858301515b600019600386901b1c1916600185901b17855562000243565b600085815260208120601f198616915b82811015620002e957888601518255948401946001909101908401620002c8565b5085821015620003085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516109006200034c60003960006102320152600081816101630152818161032f015261039501526109006000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063474a04d71161008c5780639dc29fac116100665780639dc29fac146101ce578063a9059cbb146101e1578063dd62ed3e146101f4578063e4fbb6091461022d57600080fd5b8063474a04d71461015e57806370a082311461019d57806395d89b41146101c657600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806340c10f1914610149575b600080fd5b6100dc610254565b6040516100e9919061074a565b60405180910390f35b6101056101003660046107b4565b6102e6565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046107de565b610300565b604051601281526020016100e9565b61015c6101573660046107b4565b610324565b005b6101857f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e9565b6101196101ab36600461081a565b6001600160a01b031660009081526020819052604090205490565b6100dc61037b565b61015c6101dc3660046107b4565b61038a565b6101056101ef3660046107b4565b6103dd565b61011961020236600461083c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101857f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546102639061086f565b80601f016020809104026020016040519081016040528092919081815260200182805461028f9061086f565b80156102dc5780601f106102b1576101008083540402835291602001916102dc565b820191906000526020600020905b8154815290600101906020018083116102bf57829003601f168201915b5050505050905090565b6000336102f48185856103eb565b60019150505b92915050565b60003361030e8582856103fd565b610319858585610480565b506001949350505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036d57604051631042269d60e21b815260040160405180910390fd5b61037782826104df565b5050565b6060600480546102639061086f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d357604051631042269d60e21b815260040160405180910390fd5b6103778282610515565b6000336102f4818585610480565b6103f8838383600161054b565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461047a578181101561046b57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61047a8484848403600061054b565b50505050565b6001600160a01b0383166104aa57604051634b637e8f60e11b815260006004820152602401610462565b6001600160a01b0382166104d45760405163ec442f0560e01b815260006004820152602401610462565b6103f8838383610620565b6001600160a01b0382166105095760405163ec442f0560e01b815260006004820152602401610462565b61037760008383610620565b6001600160a01b03821661053f57604051634b637e8f60e11b815260006004820152602401610462565b61037782600083610620565b6001600160a01b0384166105755760405163e602df0560e01b815260006004820152602401610462565b6001600160a01b03831661059f57604051634a1406b160e11b815260006004820152602401610462565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561047a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061291815260200190565b60405180910390a350505050565b6001600160a01b03831661064b57806002600082825461064091906108a9565b909155506106bd9050565b6001600160a01b0383166000908152602081905260409020548181101561069e5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610462565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106d9576002805482900390556106f8565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161073d91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107775785810183015185820160400152820161075b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107af57600080fd5b919050565b600080604083850312156107c757600080fd5b6107d083610798565b946020939093013593505050565b6000806000606084860312156107f357600080fd5b6107fc84610798565b925061080a60208501610798565b9150604084013590509250925092565b60006020828403121561082c57600080fd5b61083582610798565b9392505050565b6000806040838503121561084f57600080fd5b61085883610798565b915061086660208401610798565b90509250929050565b600181811c9082168061088357607f821691505b6020821081036108a357634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102fa57634e487b7160e01b600052601160045260246000fdfea2646970667358221220fc9f1ba699562373b56db3ad74e1137b14b4e781b789515f61e7301f8c8d4b0964736f6c63430008150033";

type ShareConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Share__factory extends ContractFactory {
  constructor(...args: ShareConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    creator: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Share> {
    return super.deploy(
      creator,
      name,
      symbol,
      overrides || {}
    ) as Promise<Share>;
  }
  override getDeployTransaction(
    creator: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(creator, name, symbol, overrides || {});
  }
  override attach(address: string): Share {
    return super.attach(address) as Share;
  }
  override connect(signer: Signer): Share__factory {
    return super.connect(signer) as Share__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareInterface {
    return new utils.Interface(_abi) as ShareInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Share {
    return new Contract(address, _abi, signerOrProvider) as Share;
  }
}
